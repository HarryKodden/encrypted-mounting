# {{ ansible_managed }}
version: '3'

services:

  traefik:
    container_name: traefik
    image: traefik:{{ traefik_version }}
    restart: unless-stopped
    ports:
      - {{ traefik_port_http }}:80
      - {{ traefik_port_https }}:443
    networks:
      - {{ traefik_docker_external_network }}
    logging:
      driver: "none"
    labels:
      - "traefik.enable=true"
{% if traefik_dashboard_enable %}
      - "traefik.http.routers.dashboard.rule=Host(`{{ inventory_hostname }}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=le"
{% if traefik_dashboard_basicauth_enable %}
      - "traefik.http.routers.dashboard.middlewares=dashboardauth"
      - "traefik.http.middlewares.dashboardauth.basicauth.usersfile=/htpasswd"
{% endif %}
{% endif %}
{% if traefik_global_https_redirect %}
      - "traefik.http.routers.httpCatchall.rule=HostRegexp(`{any:.+}`)"
      - "traefik.http.routers.httpCatchall.entrypoints=http"
      - "traefik.http.routers.httpCatchall.middlewares=httpsRedirect"
      - "traefik.http.middlewares.httpsRedirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.httpsRedirect.redirectscheme.permanent=true"
{% endif %}
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "{{ traefik_directory }}/htpasswd:/htpasswd:ro"
      - "{{ traefik_directory }}/traefik.toml:/traefik.toml"
      - "{{ traefik_directory }}/conf.d:/conf.d"
{% if traefik_acme_enable %}
      - "{{ traefik_directory }}/acme.json:/acme.json"
{% endif %}

  oidc:
    container_name: oidc
    image: quay.io/vouch/vouch-proxy
    restart: unless-stopped
    volumes:
      - ./oidc.yml:/config/config.yml:ro
    networks:
      - internal
      - external
    environment:
      - VOUCH_DOCUMENT_ROOT=/oidc
    logging:
      driver: "none"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.oidc.rule=Host(`{{ inventory_hostname }}`) && PathPrefix(`/oidc`)"
      - "traefik.http.routers.oidc.tls=true"
      - "traefik.http.routers.oidc.tls.certresolver=le"
      - "traefik.http.routers.oidc.entrypoints=https"
      - "traefik.http.routers.oidc.service=oidc"
      - "traefik.http.services.oidc.loadbalancer.server.port=9090"

networks:
  {{ traefik_docker_external_network }}:
    external:
      name: {{ traefik_docker_external_network }}
  {{ traefik_docker_internal_network }}:
    external:
      name: {{ traefik_docker_internal_network }}